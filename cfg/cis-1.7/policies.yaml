controls:
version: "cis-1.7"
id: 5
text: "Kubernetes策略"
type: "policies"
groups:
  - id: 5.1
    text: "RBAC（Role-Based Access Control）和Service Accounts（服务账号）"
    checks:
      - id: 5.1.1
        text: "确保只在必要时使用 cluster-admin 角色（手动）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用，以及它们是否需要这个角色，或者它们是否可以使用更少权限的角色。在可能的情况下，首先将用户绑定到一个权限较低的角色，然后删除与 cluster-admin 角色相关的 clusterrolebinding：kubectl delete clusterrolebinding [name]
        scored: false

      - id: 5.1.2
        text: "最小化对机密信息的访问（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，在集群中删除对 Secret 对象的获取、列出和监视权限。
        scored: false

      - id: 5.1.3
        text: "尽量减少在角色（Roles）和集群角色（ClusterRoles）中的通配符使用（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，应该用具体的对象或操作替换集群角色和角色中对通配符的使用。
        scored: false

      - id: 5.1.4
        text: "限制创建 Pod 的访问权限（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除集群中对 pod 对象的创建访问权限。
        scored: false

      - id: 5.1.5
        text: "确保默认服务账号没有被激活使用。（手动）"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问权限到 Kubernetes API 服务器时，创建明确的服务账号。修改每个默认服务账号的配置，包括这个值 automountServiceAccountToken: false。
        scored: false

      - id: 5.1.6
        text: "确保只在必要的情况下挂载服务账户令牌（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账户令牌的 pod 和服务账户的定义，禁用该功能。
        scored: false

      - id: 5.1.7
        text: "避免使用 system:masters 组（手动）。"
        type: "manual"
        remediation: |-
          将所有用户从集群中的 system:masters 组中移除。
        scored: false

      - id: 5.1.8
        text: "限制在 Kubernetes 集群中使用 Bind、Impersonate 和 Escalate 权限（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，从 subjects 中删除模拟、绑定和提升权限的权利。
        scored: false

      - id: 5.1.9
        text: "最小化访问权限以创建持久卷（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除集群中对 PersistentVolume 对象的创建访问权限。
        scored: false

      - id: 5.1.10
        text: "减少对节点的代理子资源的访问权限（手动进行）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对节点对象的代理子资源的访问权限。
        scored: false

      - id: 5.1.11
        text: "限制对 certificatesigningrequests 对象的 approval 子资源的访问权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对 certificatesigningrequest 对象的 approval 子资源的访问权限。
        scored: false

      - id: 5.1.12
        text: "最小化对 Webhook 配置对象的访问（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对 validatingwebhookconfigurations 或 mutatingwebhookconfigurations 对象的访问权限。
        scored: false

      - id: 5.1.13
        text: "限制对服务账户令牌创建的访问（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对 serviceaccount 对象的 token 子资源的访问权限。
        scored: false

  - id: 5.2
    text: "Pod 安全标准"
    checks:
      - id: 5.2.1
        text: "确保集群至少有一个处于活动状态的政策控制机制（手动）。"
        type: "manual"
        remediation: |-
          确保每个包含用户工作负载的命名空间都设置了 Pod 安全入场或外部策略控制系统。
        scored: false

      - id: 5.2.2
        text: "减少特权容器的准入（手动）"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，以限制特权容器的准入。
        scored: false

      - id: 5.2.3
        text: "最小化容器希望共享主机进程ID命名空间的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，限制 `hostPID` 容器的准入。
        scored: false

      - id: 5.2.4
        text: "尽量减少希望共享主机 IPC 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，以限制 `hostIPC` 容器的准入。
        scored: false

      - id: 5.2.5
        text: "最小化希望共享主机网络命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          向集群中每个具有用户工作负载的命名空间添加策略，以限制 Admission 控制器审核 `hostNetwork` 容器的入口。
        scored: false

      - id: 5.2.6
        text: "最小化允许特权升级的容器入场（自动化）。"
        type: "manual"
        remediation: |-
          向集群中每个包含用户工作负载的命名空间添加策略，以限制具有 `.spec.allowPrivilegeEscalation` 设置为 `true` 的容器的准入。
        scored: false

      - id: 5.2.7
        text: "最小化 root 容器的准入（自动化）"
        type: "manual"
        remediation: |-
          为集群中的每个命名空间创建一个策略，确保要么设置 `MustRunAsNonRoot`，要么设置 `MustRunAs` 且 UID 范围不包括 0。
        scored: false

      - id: 5.2.8
        text: "尽量减少具有 NET_RAW 能力的容器准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制具有 `NET_RAW` 能力的容器的准入。
        scored: false

      - id: 5.2.9
        text: "尽量减少具有增加能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          确保群集中的策略中不包含 `allowedCapabilities`，除非它设置为空数组。
        scored: false

      - id: 5.2.10
        text: "最小化具有分配的 capabilities 的容器准入（手动操作）。"
        type: "manual"
        remediation: |-
          审查在集群上运行的应用程序中使用 capabilites 的情况。如果一个命名空间包含不需要任何 Linux 能力来运行的应用程序，考虑添加一个 PSP，禁止接受不丢弃所有能力的容器的准入。
        scored: false

      - id: 5.2.11
        text: "最小化 Windows HostProcess 容器的准入（手动）。"
        type: "manual"
        remediation: |-
          向集群中每个具有用户工作负载的命名空间添加策略，以限制具有 `.securityContext.windowsOptions.hostProcess` 设置为 `true` 的容器的准入。
        scored: false

      - id: 5.2.12
        text: "最小化 HostPath 卷的准入（手动）。"
        type: "manual"
        remediation: |-
          向集群中每个具有用户工作负载的命名空间添加策略，限制具有 `hostPath` 卷的容器的准入。
        scored: false

      - id: 5.2.13
        text: "减少使用 HostPorts 的容器的准入（手动）。"
        type: "manual"
        remediation: |-
          在具有用户工作负载的集群中的每个命名空间中添加策略，以限制使用 `hostPort` 部分的容器的准入。
        scored: false

  - id: 5.3
    text: "网络策略和CNI"
    checks:
      - id: 5.3.1
        text: "确保正在使用的 CNI 支持 NetworkPolicies（手动）。"
        type: "manual"
        remediation: |-
          如果正在使用的 CNI 插件不支持网络策略，应考虑使用其他插件，或寻找替代机制来限制 Kubernetes 集群中的流量。
        scored: false

      - id: 5.3.2
        text: "确保所有的命名空间都有定义了 NetworkPolicies（网络策略）（手动）。"
        type: "manual"
        remediation: |-
          按照文档的指导创建所需的 NetworkPolicy 对象。
        scored: false

  - id: 5.4
    text: "机密管理"
    checks:
      - id: 5.4.1
        text: "更倾向于将 Secrets 作为文件而不是环境变量使用（手动方式）。"
        type: "manual"
        remediation: |-
          如果可能的话，重写应用程序代码，从挂载的密钥文件而不是环境变量中读取 Secrets。
        scored: false

      - id: 5.4.2
        text: "考虑外部秘钥存储（手动方式）。"
        type: "manual"
        remediation: |-
          参考您的云提供商或第三方机密管理解决方案提供的机密管理选项。
        scored: false

  - id: 5.5
    text: "可扩展的准入控制"
    checks:
      - id: 5.5.1
        text: "使用 ImagePolicyWebhook 准入控制器（手动方式）配置镜像来源。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档设置镜像溯源。
        scored: false

  - id: 5.7
    text: "一般政策"
    checks:
      - id: 5.7.1
        text: "使用命名空间 (Manual) 在资源之间创建管理员边界。"
        type: "manual"
        remediation: |-
          按照文档的说明，根据需要为部署中的对象创建命名空间。
        scored: false

      - id: 5.7.2
        text: "确保在您的 Pod 定义中将 seccomp 配置文件设置为 docker/default（手动方式）。"
        type: "manual"
        remediation: |-
          使用 `securityContext` 在 Pod 的定义中启用 docker/default seccomp 配置文件。示例如下：securityContext:  seccompProfile:    type: RuntimeDefault
        scored: false

      - id: 5.7.3
        text: "将 SecurityContext 应用于您的 Pod 和容器（手动方式）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的指引为您的 Pods 应用 SecurityContexts。您可以参考 CIS 容器 Docker 安全基准提供的建议安全上下文列表。
        scored: false

      - id: 5.7.4
        text: "不应该使用默认命名空间（手动操作）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许对 Kubernetes 资源进行适当的隔离，并确保所有新资源都在特定命名空间中创建。
        scored: false
