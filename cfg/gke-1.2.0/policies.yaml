controls:
version: "gke-1.2.0"
id: 4
text: "Kubernetes 策略"
type: "policies"
groups:
  - id: 4.1
    text: "RBAC 和服务账号"
    checks:
      - id: 4.1.1
        text: "确保只在必要的情况下使用 cluster-admin 角色（手动操作）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用，以及是否需要这个角色，或者是否可以使用权限更少的角色。在可能的情况下，首先将用户绑定到一个权限更低的角色，然后移除绑定到 cluster-admin 角色的 clusterrolebinding：kubectl delete clusterrolebinding [name]。
        scored: false

      - id: 4.1.2
        text: "最小化对 secrets 的访问（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除集群中对秘密对象的 get、list 和 watch 访问权限。
        scored: false

      - id: 4.1.3
        text: "在角色（Roles）和集群角色（ClusterRoles）中尽量减少通配符的使用（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，应将集群角色（ClusterRoles）和角色（Roles）中对通配符的使用替换为特定对象或操作。
        scored: false

      - id: 4.1.4
        text: "最小化创建 Pods 的访问权限（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，删除集群中对 Pod 对象的创建访问权限。
        scored: false

      - id: 4.1.5
        text: "确保默认服务账户没有被激活使用。（手动）"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要对 Kubernetes API 服务器进行特定访问时，请创建显式的服务账号。修改每个默认服务账号的配置，包括以下数值 autoumountServiceAccountToken: false。
        scored: true

      - id: 4.1.6
        text: "确保只在必要的情况下挂载服务账户令牌（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账号令牌的 Pod 和服务账号的定义，将其禁用。
        scored: false

  - id: 4.2
    text: "Pod 安全策略"
    checks:
      - id: 4.2.1
        text: "减少特权容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.privileged 字段被省略或者设置为 false。
        scored: false

      - id: 4.2.2
        text: "将希望共享主机进程 ID 命名空间的容器的准入最小化（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 Pod 安全策略 (PSP)，确保 .spec.hostPID 字段被省略或设置为 false。
        scored: false

      - id: 4.2.3
        text: "最小化希望共享主机 IPC 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostIPC 字段被省略或设置为 false。
        scored: false

      - id: 4.2.4
        text: "最大程度减少希望共享主机网络命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostNetwork 字段被省略或设置为 false。
        scored: false

      - id: 4.2.5
        text: "最小化具有 allowPrivilegeEscalation 的容器准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.allowPrivilegeEscalation 字段被省略或设置为 false。
        scored: false

      - id: 4.2.6
        text: "减少 root 容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.runAsUser.rule 设置为 MustRunAsNonRoot 或 MustRunAs，UID 范围不包括 0。
        scored: false

      - id: 4.2.7
        text: "减少具有 NET_RAW 能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.requiredDropCapabilities 被设置为包括 NET_RAW 或 ALL。
        scored: false

      - id: 4.2.8
        text: "减少具有新增能力的容器准入（自动化）。"
        type: "manual"
        remediation: |-
          确保集群的 PSPs 中不包含 allowedCapabilities，除非将其设置为空数组。
        scored: false

      - id: 4.2.9
        text: "减少分配了权限的容器的准入（手动）"
        type: "manual"
        remediation: |-
          审查集群中运行的应用程序中使用 capabilites 的情况。如果一个命名空间包含不需要任何 Linux 能力来运行的应用程序，请考虑添加一个禁止接受不放弃所有能力的容器的 PSP。
        scored: false

  - id: 4.3
    text: "网络策略和容器网络接口（CNI）"
    checks:
      - id: 4.3.1
        text: "确保所使用的 CNI 支持网络策略（手动）。"
        type: "manual"
        remediation: |-
          要在 GKE 中使用 CNI 插件与网络策略，需启用网络策略，然后 CNI 插件将被更新。请参考建议 6.6.7。
        scored: false

      - id: 4.3.2
        text: "确保所有的命名空间都定义了网络策略（手动方式）。"
        type: "manual"
        remediation: |-
          按照文档的说明，根据需要创建 NetworkPolicy 对象。
        scored: false

  - id: 4.4
    text: "秘钥管理"
    checks:
      - id: 4.4.1
        text: "建议优先将 Secrets 作为文件使用，而非作为环境变量 (手动方式)。"
        type: "manual"
        remediation: |-
          如果可能的话，重写应用程序代码，从挂载的机密文件中读取机密，而不是从环境变量中读取。
        scored: false

      - id: 4.4.2
        text: "考虑使用外部的秘钥存储（手动）。"
        type: "manual"
        remediation: |-
          查看您的云提供商或第三方机密管理解决方案提供的机密管理选项。
        scored: false

  - id: 4.5
    text: "可扩展的准入控制"
    checks:
      - id: 4.5.1
        text: "使用 ImagePolicyWebhook 出入控制器（手动方式）配置镜像来源。"
        type: "manual"
        remediation: |-
          请按照 Kubernetes 文档设置镜像溯源。另请参考 GKE 特定的推荐 6.10.5。
        scored: false

  - id: 4.6
    text: "通用策略"
    checks:
      - id: 4.6.1
        text: "使用命名空间（手动）在资源之间创建管理边界。"
        type: "manual"
        remediation: |-
          按照文档指引，根据部署需要为对象创建命名空间。
        scored: false

      - id: 4.6.2
        text: "确保在您的 Pod 定义中将 seccomp 配置文件设置为 docker/default（手动）。"
        type: "manual"
        remediation: |-
          Seccomp 是一个目前处于 alpha 版本阶段的功能。默认情况下，所有 alpha 特性都是禁用的。因此，您需要通过传递 "--feature-gates=AllAlpha=true" 参数来启用 apiserver 中的 alpha 特性。编辑主节点上的 /etc/kubernetes/apiserver 文件，并将 KUBE_API_ARGS 参数设置为 "--feature-gates=AllAlpha=true"KUBE_API_ARGS="--feature-gates=AllAlpha=true"根据您的系统，重新启动 kube-apiserver 服务。例如：systemctl restart kube-apiserver.service使用注释在您的 Pod 定义中启用 docker/default 的 Seccomp 配置文件。例如：apiVersion: v1kind: Podmetadata:  name: trustworthy-pod  annotations:    seccomp.security.alpha.kubernetes.io/pod: docker/defaultspec:  containers:    - name: trustworthy-container      image: sotrustworthy:latest
        scored: false

      - id: 4.6.3
        text: "将安全上下文应用于您的 Pod 和容器（手动）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的说明，为您的 Pod 应用安全上下文。您可以参考 CIS Docker 容器安全基准提供的安全上下文建议列表。
        scored: false

      - id: 4.6.4
        text: "不应该使用默认命名空间（手动）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许对 Kubernetes 资源进行适当隔离，并确保所有新资源都在特定命名空间中创建。
        scored: false
