controls:
version: "cis-1.20"
id: 5
text: "Kubernetes 策略"
type: "policies"
groups:
  - id: 5.1
    text: "RBAC（Role-Based Access Control）和服务账号"
    checks:
      - id: 5.1.1
        text: "确保集群管理员角色仅在必要时使用（手动）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用，以及它们是否需要该角色，或者是否可以使用权限更少的角色。在可能的情况下，首先将用户绑定到权限较低的角色，然后删除绑定到 cluster-admin 角色的 clusterrolebinding：kubectl delete clusterrolebinding [name]
        scored: false

      - id: 5.1.2
        text: "最小化对秘密的访问（手动）"
        type: "manual"
        remediation: |-
          在可能的情况下，删除集群中对秘密对象的获取、列表和监视访问权限。
        scored: false

      - id: 5.1.3
        text: "在角色和集群角色中尽量减少通配符的使用（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，将集群角色和角色中对通配符的使用替换为具体的对象或操作。
        scored: false

      - id: 5.1.4
        text: "最小化创建 Pod 的访问权限（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，删除群集中对 pod 对象的创建访问权限。
        scored: false

      - id: 5.1.5
        text: "确保默认服务账户没有被激活使用。（手动）"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问 Kubernetes API 服务器时，需要创建显式的服务账号。修改每个默认服务账号的配置，包括这个值 automountServiceAccountToken: false。
        scored: false

      - id: 5.1.6
        text: "确保只在必要的情况下挂载服务账户令牌（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账号令牌的 Pod 和服务账号的定义，禁用该功能。
        scored: false

      - id: 5.1.7
        text: "避免使用 system:masters 组（手动）。"
        type: "manual"
        remediation: |-
          将集群中所有用户从 system:masters 组中移除。
        scored: false

      - id: 5.1.8
        text: "在 Kubernetes 集群中限制使用 Bind、Impersonate 和 Escalate 权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，从主体中删除冒充（impersonate）、绑定（bind）和提升（escalate）权限。
        scored: false

  - id: 5.2
    text: "Pod 安全策略"
    checks:
      - id: 5.2.1
        text: "减少特权容器入场（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 PSP，并确保 .spec.privileged 字段被省略或设置为 false。
        scored: false

      - id: 5.2.2
        text: "尽量减少容器共享主机进程 ID 命名空间的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostPID 字段被省略或设置为 false。
        scored: false

      - id: 5.2.3
        text: "尽量减少容器希望共享主机 IPC 命名空间的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，并确保 .spec.hostIPC 字段被省略或设置为 false。
        scored: false

      - id: 5.2.4
        text: "最小化希望共享主机网络命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 Pod 安全策略（PSP），确保 .spec.hostNetwork 字段被省略或设置为 false。
        scored: false

      - id: 5.2.5
        text: "减少具有 allowPrivilegeEscalation 的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.allowPrivilegeEscalation 字段被省略或设置为 false。
        scored: false

      - id: 5.2.6
        text: "减少 root 容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 Pod 安全策略（PSP），确保 .spec.runAsUser.rule 设置为 MustRunAsNonRoot 或 MustRunAs，并且 UID 的范围不包括 0。
        scored: false

      - id: 5.2.7
        text: "限制具有 NET_RAW 能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.requiredDropCapabilities 被设置为包括 NET_RAW 或 ALL。
        scored: false

      - id: 5.2.8
        text: "尽量减少具有添加功能的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          确保集群中的 PSPs 中不包含 allowedCapabilities，除非将其设置为空数组。
        scored: false

      - id: 5.2.9
        text: "减少分配能力的容器准入（手动方式）。"
        type: "manual"
        remediation: |-
          审查在集群中运行的应用程序中使用的 capabilities。对于一个命名空间中包含不需要任何 Linux capabilities 来运行的应用程序，考虑添加一个禁止接受未丢弃所有 capabilities 的容器的 PSP。
        scored: false

  - id: 5.3
    text: "网络策略和 CNI。"
    checks:
      - id: 5.3.1
        text: "确保所使用的 CNI 支持网络策略 (手动)。"
        type: "manual"
        remediation: |-
          如果正在使用的 CNI 插件不支持网络策略，应考虑使用其他插件或找到替代机制来限制 Kubernetes 集群中的流量。
        scored: false

      - id: 5.3.2
        text: "确保所有命名空间都已定义网络策略（手动）。"
        type: "manual"
        remediation: |-
          按照文档的指导创建所需的 NetworkPolicy 对象。
        scored: false

  - id: 5.4
    text: "秘钥管理"
    checks:
      - id: 5.4.1
        text: "更倾向于将 secrets 作为文件而不是环境变量来使用（手动方式）。"
        type: "manual"
        remediation: |-
          如有可能，重写应用程序代码，从挂载的秘钥文件中读取秘钥，而不是从环境变量中读取。
        scored: false

      - id: 5.4.2
        text: "考虑外部秘钥存储（手动）"
        type: "manual"
        remediation: |-
          请参考您的云服务提供商或第三方秘密管理解决方案提供的秘密管理选项。
        scored: false

  - id: 5.5
    text: "可扩展的准入控制"
    checks:
      - id: 5.5.1
        text: "使用 ImagePolicyWebhook 准入控制器配置镜像来源（手动）。"
        type: "manual"
        remediation: |-
          遵循 Kubernetes 文档并设置镜像来源验证。
        scored: false

  - id: 5.7
    text: "一般策略"
    checks:
      - id: 5.7.1
        text: "使用命名空间（手动）创建资源之间的管理边界。"
        type: "manual"
        remediation: |-
          按照文档指导为部署中需要的对象创建命名空间。
        scored: false

      - id: 5.7.2
        text: "确保在您的 Pod 定义中将 seccomp 配置文件设置为 docker/default（手动）。"
        type: "manual"
        remediation: |-
          使用安全上下文在您的 pod 定义中启用 docker/default seccomp profile。示例如下：  securityContext:    seccompProfile:      type: RuntimeDefault
        scored: false

      - id: 5.7.3
        text: "手动为您的 Pod 和容器应用安全上下文。"
        type: "manual"
        remediation: |-
          请根据 Kubernetes 文档操作，为您的 Pod 应用安全上下文。关于建议的安全上下文清单，您可以参考 CIS Docker 容器安全基准。
        scored: false

      - id: 5.7.4
        text: "不应该使用默认命名空间（手动）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许对 Kubernetes 资源进行适当的隔离，并且所有新资源都应该在特定的命名空间中创建。
        scored: false
