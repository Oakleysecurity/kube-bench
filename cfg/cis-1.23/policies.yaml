controls:
version: "cis-1.23"
id: 5
text: "Kubernetes 策略"
type: "policies"
groups:
  - id: 5.1
    text: "RBAC (Role-Based Access Control) 和 Service Accounts。"
    checks:
      - id: 5.1.1
        text: "确保集群管理员（cluster-admin）角色仅在必要时使用（手动）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebinding。检查它们是否被使用，以及它们是否需要这个角色，或者它们是否可以使用权限更少的角色。在可能的情况下，首先将用户绑定到一个权限较低的角色，然后移除绑定到 cluster-admin 角色的 clusterrolebinding：kubectl delete clusterrolebinding [name]
        scored: false

      - id: 5.1.2
        text: "最小化对机密信息的访问（手动）"
        type: "manual"
        remediation: |-
          在可能的情况下，在集群中删除对 Secret 对象的获取、列表和监视访问权限。
        scored: false

      - id: 5.1.3
        text: "在角色和集群角色中尽量减少通配符的使用（手动）。"
        type: "manual"
        remediation: |-
          尽可能地，将 clusterroles 和 roles 中对通配符的使用替换为特定的对象或操作。
        scored: false

      - id: 5.1.4
        text: "限制创建 Pod 的访问权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，在集群中删除对 pod 对象的创建访问权限。
        scored: false

      - id: 5.1.5
        text: "确保默认服务账户没有被激活使用。（手动）"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问 Kubernetes API 服务器时，请创建明确的服务账户。修改每个默认服务账户的配置，包括以下数值 automountServiceAccountToken: false。
        scored: false

      - id: 5.1.6
        text: "确保仅在必要的情况下挂载 Service Account Tokens（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账户令牌的 Pod 和服务账户的定义，禁用它。
        scored: false

      - id: 5.1.7
        text: "避免使用 system:masters 组（手动）。"
        type: "manual"
        remediation: |-
          从集群中的所有用户中移除 system:masters 组。
        scored: false

      - id: 5.1.8
        text: "在 Kubernetes 集群中限制对 Bind、Impersonate 和 Escalate 权限的使用（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，从主体中删除模拟（impersonate）、绑定（bind）和升级（escalate）权限。
        scored: false

  - id: 5.2
    text: "Pod 安全标准"
    checks:
      - id: 5.2.1
        text: "确保集群至少有一个活动的策略控制机制（手动）。"
        type: "manual"
        remediation: |-
          确保每个包含用户工作负载的命名空间中都有 Pod 安全审计或外部策略控制系统。
        scored: false

      - id: 5.2.2
        text: "减少特权容器的准入（手动方式）"
        type: "manual"
        remediation: |-
          在集群中拥有用户工作负载的每个命名空间中添加策略，以限制特权容器的准入。
        scored: false

      - id: 5.2.3
        text: "最小化希望共享主机进程 ID 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，限制 `hostPID` 容器的准入。
        scored: false

      - id: 5.2.4
        text: "最小化希望共享主机 IPC 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，以限制 `hostIPC` 容器的准入。
        scored: false

      - id: 5.2.5
        text: "最小化容器希望共享主机网络命名空间的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个有用户工作负载的命名空间中添加策略，以限制 `hostNetwork` 容器的准入。
        scored: false

      - id: 5.2.6
        text: "最小化具有 allowPrivilegeEscalation 的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，以限制具有 `.spec.allowPrivilegeEscalation` 设置为 `true` 的容器的准入。
        scored: false

      - id: 5.2.7
        text: "最小化根容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          为集群中的每个命名空间创建一个策略，确保要么设置 `MustRunAsNonRoot`，要么设置 `MustRunAs` 并且 UID 范围不包括 0。
        scored: false

      - id: 5.2.8
        text: "减少具有 NET_RAW 权限的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          向集群中每个包含用户工作负载的命名空间添加策略，以限制具有 `NET_RAW` 能力的容器的准入。
        scored: false

      - id: 5.2.9
        text: "最小化具有额外能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          确保在集群的策略中，`allowedCapabilities` 未设置或者被设置为空数组。
        scored: false

      - id: 5.2.10
        text: "减少分配了权限的容器的准入（手动操作）。"
        type: "manual"
        remediation: |-
          审查集群中运行的应用程序中的 capabilites 使用情况。在一个命名空间中包含不需要任何 Linux capabilites 来操作的应用程序时，考虑添加一个 PSP，禁止允许容器的准入，这些容器未放弃所有 capabilites。
        scored: false

      - id: 5.2.11
        text: "减少 Windows HostProcess 容器的准入（手动）"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制那些将 `.securityContext.windowsOptions.hostProcess` 设置为 `true` 的容器的接纳。
        scored: false

      - id: 5.2.12
        text: "尽量减少 HostPath 卷的准入（手动）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，限制具有 `hostPath` 卷的容器的准入。
        scored: false

      - id: 5.2.13
        text: "最小化允许使用 HostPorts 的容器的准入（手动）。"
        type: "manual"
        remediation: |-
          给集群中每个包含用户工作负载的命名空间添加策略，限制容器中使用 `hostPort` 段的准入。
        scored: false

  - id: 5.3
    text: "网络策略和 CNI"
    checks:
      - id: 5.3.1
        text: "确保正在使用的 CNI 支持 NetworkPolicies（手动）。"
        type: "manual"
        remediation: |-
          如果使用的 CNI 插件不支持网络策略，应考虑使用其他插件，或者寻找其他机制来限制 Kubernetes 集群中的流量。
        scored: false

      - id: 5.3.2
        text: "确保所有命名空间都定义了网络策略（手动配置）。"
        type: "manual"
        remediation: |-
          按照文档的指导创建所需的 NetworkPolicy 对象。
        scored: false

  - id: 5.4
    text: "密钥管理"
    checks:
      - id: 5.4.1
        text: "建议将 Secrets 作为文件而不是环境变量来使用（手动方式）。"
        type: "manual"
        remediation: |-
          如果可能的话，重写应用程序代码，从挂载的秘密文件中读取 Secrets，而不是从环境变量中读取。
        scored: false

      - id: 5.4.2
        text: "考虑使用外部的秘钥存储（手动）。"
        type: "manual"
        remediation: |-
          请参考您的云服务提供商或第三方密钥管理解决方案提供的秘密管理选项。
        scored: false

  - id: 5.5
    text: "可扩展的准入控制"
    checks:
      - id: 5.5.1
        text: "使用 ImagePolicyWebhook 准入控制器（手动）配置镜像来源验证。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的步骤设置镜像溯源。
        scored: false

  - id: 5.7
    text: "一般策略"
    checks:
      - id: 5.7.1
        text: "使用命名空间 (Manual) 在资源之间创建管理边界。"
        type: "manual"
        remediation: |-
          根据文档创建命名空间，以满足部署对象的需求。
        scored: false

      - id: 5.7.2
        text: "确保在您的 Pod 定义中将 seccomp 文件设置为 docker/default（手动指定）。"
        type: "manual"
        remediation: |-
          使用 `securityContext` 在 Pod 定义中启用 docker/default seccomp 个人资料。一个示例如下：securityContext:  seccompProfile:    type: RuntimeDefault
        scored: false

      - id: 5.7.3
        text: "为您的 Pod 和容器应用 SecurityContext（手动）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的指引，为您的 Pods 应用 SecurityContexts。您可以参考 CIS Security Benchmark for Docker Containers 获取建议的 SecurityContexts 列表。
        scored: false

      - id: 5.7.4
        text: "不应该使用默认命名空间（手动）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许对 Kubernetes 资源进行适当的隔离，并确保所有新资源都在特定的命名空间中创建。
        scored: false
