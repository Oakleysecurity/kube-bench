controls:
version: "k3s-cis-1.24"
id: 5
text: "Kubernetes策略"
type: "policies"
groups:
  - id: 5.1
    text: "RBAC 和服务账户"
    checks:
      - id: 5.1.1
        text: "确保只在必要的情况下使用 cluster-admin 角色（手动操作）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用以及是否需要这个角色，或者它们是否可以使用权限更少的角色。在可能的情况下，首先将用户绑定到一个权限较低的角色，然后移除绑定到 cluster-admin 角色的 clusterrolebinding：kubectl delete clusterrolebinding [name]
        scored: false

      - id: 5.1.2
        text: "最小化对机密信息的访问（手动进行）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除集群中对 Secret 对象的 get、list 和 watch 访问权限。
        scored: false

      - id: 5.1.3
        text: "在角色和集群角色中尽量减少通配符的使用（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，用具体的对象或操作替换 clusterroles 和 roles 中任何使用通配符的地方。
        scored: false

      - id: 5.1.4
        text: "最小化创建 Pod 的访问权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，在集群中删除对 pod 对象的创建访问权限。
        scored: false

      - id: 5.1.5
        text: "确保默认服务账号未被激活使用。(手动)"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问 Kubernetes API 服务器的情况下，创建明确的服务账号。修改每个默认服务账号的配置，包括如下数值：automountServiceAccountToken: false
        scored: false

      - id: 5.1.6
        text: "确保只在必要的情况下挂载服务账号令牌（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账户令牌的 Pod 和服务账户的定义，将其禁用。
        scored: false

      - id: 5.1.7
        text: "避免使用 system:masters 组（手动）。"
        type: "manual"
        remediation: |-
          从集群中的所有用户中移除 system:masters 组。
        scored: false

      - id: 5.1.8
        text: "在 Kubernetes 集群中限制对 Bind、Impersonate 和 Escalate 权限的使用（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，从主体中删除模拟 (impersonate)、绑定 (bind) 和提升 (escalate) 权限。
        scored: false

  - id: 5.2
    text: "Pod 安全标准"
    checks:
      - id: 5.2.1
        text: "确保集群至少有一个活动的策略控制机制 (Manual)。"
        type: "manual"
        remediation: |-
          确保每个包含用户工作负载的命名空间中都有 Pod 安全入场或外部策略控制系统。
        scored: false

      - id: 5.2.2
        text: "最小化特权容器的准入（手动方式）"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制特权容器的准入。
        scored: false

      - id: 5.2.3
        text: "尽量减少希望共享主机进程 ID 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，限制 `hostPID` 容器的准入。
        scored: false

      - id: 5.2.4
        text: "减少希望共享主机 IPC 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，限制 `hostIPC` 容器的接受。
        scored: false

      - id: 5.2.5
        text: "减少希望共享主机网络命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制 `hostNetwork` 容器的准入。
        scored: false

      - id: 5.2.6
        text: "最小化具有 allowPrivilegeEscalation 权限的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          为集群中每个包含用户工作负载的命名空间添加策略，以限制具有 `.spec.allowPrivilegeEscalation` 设置为 `true` 的容器的准入。
        scored: false

      - id: 5.2.7
        text: "尽量减少根容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          为集群中的每个命名空间创建一个策略，确保要么设置 `MustRunAsNonRoot`，要么设置 `MustRunAs`，并且UID范围不包括0。
        scored: false

      - id: 5.2.8
        text: "最小化具有 NET_RAW 能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，限制具有 `NET_RAW` 能力的容器的准入。
        scored: false

      - id: 5.2.9
        text: "减少具有额外能力的容器准入（自动化）。"
        type: "manual"
        remediation: |-
          确保集群的策略中不存在 `allowedCapabilities`，除非将其设置为空数组。
        scored: false

      - id: 5.2.10
        text: "减少分配容器权限的准入（手动）"
        type: "manual"
        remediation: |-
          审查在集群中运行的应用程序中的 capabilities 的使用情况。当一个命名空间包含不需要任何 Linux capabilities 才能运行的应用程序时，考虑添加一个 PSP（Pod Security Policy），禁止接受不放弃所有 capabilities 的容器的入场。
        scored: false

      - id: 5.2.11
        text: "最小化 Windows HostProcess 容器的准入（手动操作）。"
        type: "manual"
        remediation: |-
          向集群中具有用户工作负载的每个命名空间添加策略，以限制具有`.securityContext.windowsOptions.hostProcess`设置为`true`的容器的准入。
        scored: false

      - id: 5.2.12
        text: "最小化 HostPath 卷的准入（手动）。"
        type: "manual"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，限制具有 `hostPath` 卷的容器的准入。
        scored: false

      - id: 5.2.13
        text: "减少允许使用 HostPorts 的容器的准入（手动方式）。"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制使用 `hostPort` 部分的容器入场。
        scored: false

  - id: 5.3
    text: "网络策略和容器网络接口（CNI）"
    checks:
      - id: 5.3.1
        text: "确保使用的 CNI 支持 NetworkPolicies（手动）。"
        type: "manual"
        remediation: |-
          如果正在使用的 CNI 插件不支持网络策略，应该考虑使用不同的插件或者寻找替代机制来限制 Kubernetes 集群中的流量。
        scored: false

      - id: 5.3.2
        text: "确保所有命名空间都定义了网络策略（手动）。"
        type: "manual"
        remediation: |-
          根据文档指引，根据需要创建 NetworkPolicy 对象。
        scored: false

  - id: 5.4
    text: "密钥管理"
    checks:
      - id: 5.4.1
        text: "更倾向于将 Secrets 作为文件而不是环境变量使用（手动方式）。"
        type: "manual"
        remediation: |-
          如果可能的话，重写应用程序代码，从挂载的密钥文件中读取 Secrets，而不是从环境变量中读取。
        scored: false

      - id: 5.4.2
        text: "考虑外部的密钥存储（手动方式）。"
        type: "manual"
        remediation: |-
          参考您的云服务提供商或第三方机密管理解决方案提供的机密管理选项。
        scored: false

  - id: 5.5
    text: "可扩展的准入控制"
    checks:
      - id: 5.5.1
        text: "使用 ImagePolicyWebhook 准入控制器配置镜像来源验证（手动）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的指引设置镜像来源可信性验证。
        scored: false

  - id: 5.7
    text: "通用策略"
    checks:
      - id: 5.7.1
        text: "使用命名空间 (手动方式) 在资源之间创建管理边界。"
        type: "manual"
        remediation: |-
          根据文档的指引，按需为部署中的对象创建命名空间。
        scored: false

      - id: 5.7.2
        text: "确保在您的 Pod 定义中将 seccomp 配置文件设置为 docker/default（手动）。"
        type: "manual"
        remediation: |-
          在 Pod 定义中使用 `securityContext` 来启用 Docker 默认的 seccomp 配置文件。一个示例如下:  securityContext:    seccompProfile:      type: RuntimeDefault
        scored: false

      - id: 5.7.3
        text: "将 SecurityContext 应用到你的 Pod 和容器中（手动）。"
        type: "manual"
        remediation: |-
          请按照 Kubernetes 文档的指引，在 Pod 中应用 SecurityContexts。您可以参考 CIS Docker 容器安全基准提供的建议 SecurityContexts 列表。
        scored: false

      - id: 5.7.4
        text: "不应该使用默认命名空间（手动）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许适当分离 Kubernetes 资源，并确保所有新资源都创建在特定的命名空间中。
        scored: false
