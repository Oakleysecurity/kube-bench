controls:
version: "eks-1.1.0"
id: 4
text: "策略"
type: "policies"
groups:
  - id: 4.1
    text: "RBAC（Role-Based Access Control）和服务账号"
    checks:
      - id: 4.1.1
        text: "确保只在需要的情况下使用 cluster-admin 角色（手动）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用，以及是否需要这个角色，或者它们是否可以使用一个权限更低的角色。在可能的情况下，首先将用户绑定到一个权限更低的角色，然后再移除绑定到 cluster-admin 角色的 clusterrolebinding：kubectl delete clusterrolebinding [name]
        scored: false

      - id: 4.1.2
        text: "最大程度减少对机密信息的访问（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对集群中秘钥对象的 get、list 和 watch 访问权限。
        scored: false

      - id: 4.1.3
        text: "减少在角色（Roles）和集群角色（ClusterRoles）中通配符的使用（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，将集群角色和角色中对通配符的使用替换为特定的对象或操作。
        scored: false

      - id: 4.1.4
        text: "将创建 Pod 的访问权限最小化（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，在集群中删除对 pod 对象的创建访问权限。
        scored: false

      - id: 4.1.5
        text: "确保不活跃使用默认服务帐户。（手动）"
        type: "manual"
        remediation: |-
          在 Kubernetes workload 需要特定访问权限到 Kubernetes API 服务器时，创建显式服务账号。修改每个默认服务账号的配置，包括以下数值 automountServiceAccountToken: false。
        scored: false

      - id: 4.1.6
        text: "确保只在必要的情况下挂载服务账号令牌（手动操作）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账户令牌的 Pod 和服务账户的定义，禁用该功能。
        scored: false

  - id: 4.2
    text: "Pod 安全策略"
    checks:
      - id: 4.2.1
        text: "最小化特权容器的准入（自动）"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，在其中确保 .spec.privileged 字段被省略或设置为 false。
        scored: false

      - id: 4.2.2
        text: "最小化接受希望共享主机进程 ID 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostPID 字段被省略或设置为 false。
        scored: false

      - id: 4.2.3
        text: "最小化容器希望共享主机 IPC 命名空间的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostIPC 字段被省略或设置为 false。
        scored: false

      - id: 4.2.4
        text: "最小化希望共享主机网络命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostNetwork 字段被省略或设置为 false。
        scored: false

      - id: 4.2.5
        text: "尽量减少使用 allowPrivilegeEscalation 的容器准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PodSecurityPolicy（PSP），确保 .spec.allowPrivilegeEscalation 字段被省略或设置为 false。
        scored: false

      - id: 4.2.6
        text: "减少 root 容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.runAsUser.rule 设置为 MustRunAsNonRoot 或 MustRunAs，并且 UID 的范围不包括 0。
        scored: false

      - id: 4.2.7
        text: "限制具有 NET_RAW 能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.requiredDropCapabilities 被设置为包括 NET_RAW 或 ALL。
        scored: false

      - id: 4.2.8
        text: "减少具有额外能力的容器的接纳（手动）。"
        type: "manual"
        remediation: |-
          确保群集中的 PSPs 中不包含 allowedCapabilities，除非设置为一个空数组。
        scored: false

      - id: 4.2.9
        text: "减少分配容器能力权限的容器准入（手动操作）。"
        type: "manual"
        remediation: |-
          审查在集群中运行的应用程序中使用 capabilities 的情况。在一个命名空间中包含不需要任何 Linux 权限能够运行的应用程序时，考虑添加一个 PSP，禁止接受不丢弃所有权限的容器。
        scored: false

  - id: 4.3
    text: "CNI 插件"
    checks:
      - id: 4.3.1
        text: "确保使用最新的 CNI 版本（手动）。"
        type: "manual"
        remediation: |-
          审查 AWS CNI 插件的文档，并确保使用最新的 CNI 版本。
        scored: false

      - id: 4.3.2
        text: "确保所有的命名空间都定义了网络策略（Manual）。"
        type: "manual"
        remediation: |-
          根据文档的指导创建所需的 NetworkPolicy 对象。
        scored: false

  - id: 4.4
    text: "秘钥管理"
    checks:
      - id: 4.4.1
        text: "倾向于将 secrets 作为文件使用，而不是将 secrets 作为环境变量使用（手动方式）。"
        type: "manual"
        remediation: |-
          如果可能的话，重新编写应用程序代码，从挂载的密钥文件中读取密钥，而不是从环境变量中读取。
        scored: false

      - id: 4.4.2
        text: "考虑外部秘钥存储（手动）。"
        type: "manual"
        remediation: |-
          请参考您的云服务提供商或第三方秘密管理解决方案提供的密钥管理选项。
        scored: false

  - id: 4.5
    text: "可扩展的准入控制"
    checks: []

  - id: 4.6
    text: "常规策略"
    checks:
      - id: 4.6.1
        text: "使用命名空间（手动方式）创建资源之间的管理边界。"
        type: "manual"
        remediation: |-
          按照文档的指导，根据部署所需的对象创建命名空间。
        scored: false

      - id: 4.6.2
        text: "将安全上下文应用到您的 Pod 和容器中（手动）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的指引，为您的 Pod 应用安全上下文。您可以参考 CIS Docker 容器安全基准推荐的安全上下文列表。
        scored: false

      - id: 4.6.3
        text: "不应该使用默认命名空间（手动）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许对 Kubernetes 资源进行适当的隔离，并确保所有新资源都在特定的命名空间中创建。
        scored: false
