controls:
version: "cis-1.6-k3s"
id: 2
text: "Etcd 节点配置"
type: "etcd"
groups:
  - id: 2
    text: "Etcd 节点配置文件"
    checks:
      - id: 2.1
        text: "确保在将 etcd 作为数据库时，适当设置 --cert-file 和 --key-file 参数（自动化设置）。"
        audit: grep -A 4 'client-transport-security' $etcdconf | grep -E 'cert-file|key-file'
        tests:
          bin_op: and
          test_items:
            - flag: "cert-file"
            - flag: "key-file"
        remediation: |-
          默认情况下，K3s 使用一个可以在 $etcdconf 中找到的 etcd 配置文件。该配置文件包含 client-transport-security: 字段，其中包含了对等证书和对等密钥文件。无需手动修复。
        scored: true

      - id: 2.2
        text: "确保将 --client-cert-auth 参数设置为 true（自动化）。"
        audit: grep 'client-cert-auth' $etcdconf
        tests:
          test_items:
            - flag: "client-cert-auth"
              compare:
                op: eq
                value: true
        remediation: |-
          默认情况下，K3s 使用一个可在 $etcdconf 中找到的 etcd 配置文件。client-cert-auth 被设置为 true。不需要手动修复。
        scored: true

      - id: 2.3
        text: "确保 --auto-tls 参数未设置为 true（自动化）。"
        audit: grep 'auto-tls' $etcdconf | cat
        tests:
          bin_op: or
          test_items:
            - flag: "auto-tls"
              set: false
            - flag: "auto-tls"
              compare:
                op: eq
                value: false
        remediation: |-
          默认情况下，K3s 在启动 Etcd 时不会使用这个标志。它默认设置为 false。
        scored: true

      - id: 2.4
        text: "确保将 --peer-cert-file 和 --peer-key-file 参数设置为适当的数值（自动化）。"
        audit: grep -A 4 'peer-transport-security' $etcdconf | grep -E 'cert-file|key-file'
        tests:
          bin_op: and
          test_items:
            - flag: "cert-file"
            - flag: "key-file"
        remediation: |-
          默认情况下，K3s 使用此处找到的配置文件 $etcdconf 启动 Etcd。该配置文件包含 peer-transport-security: 字段，其中包含对等证书和对等密钥文件。
        scored: true

      - id: 2.5
        text: "确保将 --peer-client-cert-auth 参数设置为 true（自动化）。"
        audit: grep -A 4 'peer-transport-security' $etcdconf | grep 'client-cert-auth'
        tests:
          test_items:
            - flag: "client-cert-auth"
              compare:
                op: eq
                value: true
        remediation: |-
          默认情况下，K3s 使用一个可以在 $etcdconf 中找到的 etcd 配置文件。该配置文件包含了 peer-transport-security:，其中 client-cert-auth 被设置为 true。无需手动修复。
        scored: true

      - id: 2.6
        text: "确保 --peer-auto-tls 参数未设置为 true（自动化）。"
        audit: grep 'peer-auto-tls' $etcdconf | cat
        tests:
          bin_op: or
          test_items:
            - flag: "peer-auto-tls"
              set: false
            - flag: "peer-auto-tls"
              compare:
                op: eq
                value: false
        remediation: |-
          默认情况下，K3s 使用一个可以在 $etcdconf 路径下找到的 etcd 配置文件。在该文件中，并不包含 peer-auto-tls 字段。无需手动修复。
        scored: true

      - id: 2.7
        text: "确保为etcd使用唯一的证书颁发机构（手动）。"
        audit: |
          if [ -f "$etcdconf" ];then
            etcd_ca=$(grep 'trusted-ca-file' $etcdconf | awk -F ":|: *" '{print $NF}');
            apiserver_ca=$(journalctl -u k3s | grep "Running kube-apiserver" | tail -n1 | grep "trusted-ca-file" | awk -F "=" '{print $NF}')
            if [ "$etcd_ca" == "$apiserver_ca" ]; then
              echo 'etcd_and_apiserver_have_same_ca';
            else
              echo 'etcd_and_apiserver_ca_not_same1' ;
            fi
          else
            echo 'etcd_and_apiserver_ca_not_same'; return ;
          fi
        tests:
          test_items:
            - flag: "etcd_and_apiserver_ca_not_same"
        remediation: |-
          默认情况下，K3s 使用一个可以在 $etcdconf 中找到的 etcd 配置文件，并且其中的 trusted-ca-file 参数设置为特定于 etcd 的唯一值。无需手动修复。
        scored: false
