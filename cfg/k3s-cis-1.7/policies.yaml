controls:
version: "k3s-cis-1.7"
id: 5
text: "Kubernetes 策略"
type: "policies"
groups:
  - id: 5.1
    text: "RBAC 和服务账户"
    checks:
      - id: 5.1.1
        text: "确保只在必要的情况下使用 cluster-admin 角色（手动方式）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用，以及它们是否需要此角色，或者它们是否可以使用具有更少权限的角色。在可能的情况下，首先将用户绑定到一个权限较低的角色，然后删除绑定到 cluster-admin 角色的 clusterrolebinding：kubectl delete clusterrolebinding [name]。
        scored: false

      - id: 5.1.2
        text: "最小化对机密信息的访问（手动操作）"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对集群中 Secret 对象的 get、list 和 watch 访问权限。
        scored: false

      - id: 5.1.3
        text: "在角色（Roles）和集群角色（ClusterRoles）中尽量减少通配符的使用（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，将 clusterroles 和 roles 中对通配符的使用替换为具体的对象或操作。
        scored: false

      - id: 5.1.4
        text: "限制创建 Pod 的访问权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，删除集群中对 pod 对象的创建访问权限。
        scored: false

      - id: 5.1.5
        text: "确保默认服务账号未被激活使用。(手动操作)"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问权限时，请创建明确的服务账号。修改每个默认服务账号的配置，包括该数值 automountServiceAccountToken: false。
        scored: false


      - id: 5.1.6
        text: "确保只在必要的情况下挂载 Service Account Tokens（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账户令牌的 Pod 和服务账户的定义，禁用该功能。
        scored: false

      - id: 5.1.7
        text: "避免使用 system:masters 组（手动）。"
        type: "manual"
        remediation: |-
          从集群中的所有用户中删除 system:masters 组。
        scored: false

      - id: 5.1.8
        text: "在 Kubernetes 集群中限制对 Bind、Impersonate 和 Escalate 权限的使用（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，将主体的 impersonate、bind 和 escalate 权限移除。
        scored: false

      - id: 5.1.9
        text: "限制创建持久卷的访问权限（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，删除集群中对 PersistentVolume 对象的创建访问权限。
        scored: false

      - id: 5.1.10
        text: "最小化对节点代理子资源的访问（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对节点对象的代理子资源的访问权限。
        scored: false

      - id: 5.1.11
        text: "限制对 certificatesigningrequests 对象的 approval 子资源的访问权限（手动）"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对 certificatesigningrequest 对象的 approval 子资源的访问权限。
        scored: false

      - id: 5.1.12
        text: "最小化对 Webhook 配置对象的访问（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，删除对 validatingwebhookconfigurations 或 mutatingwebhookconfigurations 对象的访问权限。
        scored: false

      - id: 5.1.13
        text: "最小化对服务账号令牌创建的访问权限（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，删除对 serviceaccount 对象的 token 子资源的访问权限。
        scored: false

  - id: 5.2
    text: "Pod 安全标准"
    checks:
      - id: 5.2.1
        text: "确保集群中至少有一种有效的策略控制机制处于可用状态（手动）。"
        type: "manual"
        remediation: |-
          确保每个包含用户工作负载的命名空间中都要么存在 Pod 安全入场，要么存在外部策略控制系统。
        scored: false

      - id: 5.2.2
        text: "最小化特权容器的准入（手动）"
        type: "manual"
        remediation: |-
          向集群中每个具有用户工作负载的命名空间添加策略，以限制特权容器的准入。
        scored: false

      - id: 5.2.3
        text: "最小化容器希望共享主机进程 ID 命名空间的准入（自动化）。"
        remediation: |-
          向集群中每个包含用户工作负载的命名空间添加策略以限制 `hostPID` 容器的准入。
        scored: false

      - id: 5.2.4
        text: "最小化希望共享主机 IPC 命名空间的容器准入（自动化）。"
        remediation: |-
          在集群中每个包含用户工作负载的命名空间中添加策略，以限制 `hostIPC` 容器的准入。
        scored: false

      - id: 5.2.5
        text: "尽量减少希望共享主机网络命名空间的容器的接入（自动化）。"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制 `hostNetwork` 容器的准入。
        scored: false

      - id: 5.2.6
        text: "减少允许特权提升的容器准入（自动化）。"
        type: "manual"
        remediation: |-
          为集群中每个具有用户工作负载的命名空间添加策略，以限制容器的准入，其中 `.spec.allowPrivilegeEscalation` 设置为 `true`。
        scored: true

      - id: 5.2.7
        text: "减少 root 容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          为集群中的每个命名空间创建一个策略，确保设置为 `MustRunAsNonRoot` 或者带有不包括 0 的 UID 范围的 `MustRunAs`。
        scored: false

      - id: 5.2.8
        text: "最小化具有 NET_RAW 能力的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          在集群中每个具有用户工作负载的命名空间中添加策略，以限制具有`NET_RAW`权限的容器的准入。
        scored: false

      - id: 5.2.9
        text: "限制具有额外权限的容器减少准入（自动化）"
        type: "manual"
        remediation: |-
          确保集群策略中的 `allowedCapabilities` 参数不存在，除非设置为空数组。
        scored: false

      - id: 5.2.10
        text: "减少分配了权限的容器的准入（手动）。"
        type: "manual"
        remediation: |-
          审查在集群上运行的应用程序中的 capabilities 使用情况。如果一个命名空间包含不需要任何 Linux capabilities 来运行的应用程序，请考虑添加一个 PSP，禁止接受不放弃所有 capabilities 的容器的准入。
        scored: false

      - id: 5.2.11
        text: "减少 Windows HostProcess 容器的准入（手动操作）"
        type: "manual"
        remediation: |-
          向集群中每个包含用户工作负载的命名空间添加策略，以限制具有 `.securityContext.windowsOptions.hostProcess` 设置为 `true` 的容器的接受。
        scored: false

      - id: 5.2.12
        text: "限制 HostPath 卷的准入（手动方式）。"
        type: "manual"
        remediation: |-
          向集群中每个具有用户工作负载的命令空间添加策略，限制具有 `hostPath` 卷的容器的准入。
        scored: false

      - id: 5.2.13
        text: "最小化允许使用 HostPorts 的容器入场（手动方式）。"
        type: "manual"
        remediation: |-
          在集群中每个有用户工作负载的命名空间中添加策略，限制使用 `hostPort` 段的容器的准入。
        scored: false

  - id: 5.3
    text: "网络策略和 CNI"
    checks:
      - id: 5.3.1
        text: "确保所使用的 CNI 支持 NetworkPolicies（手动）。"
        type: "manual"
        remediation: |-
          如果正在使用的 CNI 插件不支持网络策略，应考虑使用不同的插件，或者寻找其他限制 Kubernetes 集群流量的机制。
        scored: false

      - id: 5.3.2
        text: "确保所有命名空间都定义了网络策略 (手动)。"
        remediation: |-
          按照文档的说明，根据需要创建 NetworkPolicy 对象。
        scored: false

  - id: 5.4
    text: "密钥管理"
    checks:
      - id: 5.4.1
        text: "推荐将 Secrets 作为文件而不是环境变量使用（手动方式）。"
        type: "manual"
        remediation: |-
          如果可能的话，重写应用程序代码，从挂载的机密文件中读取 Secrets，而不是从环境变量中读取。
        scored: false

      - id: 5.4.2
        text: "考虑外部的秘钥存储（手动）"
        type: "manual"
        remediation: |-
          请参考您的云提供商或第三方提供的 Secrets 管理选项。
        scored: false

  - id: 5.5
    text: "可扩展的准入控制"
    checks:
      - id: 5.5.1
        text: "使用 ImagePolicyWebhook 出入控制器（手动方式）配置镜像来源。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的说明，设置镜像溯源功能。
        scored: false

  - id: 5.7
    text: "通用策略"
    checks:
      - id: 5.7.1
        text: "使用命名空间 (手动方式) 在资源之间创建管理边界。"
        type: "manual"
        remediation: |-
          按照文档的指导，根据部署需要为对象创建命名空间。
        scored: false

      - id: 5.7.2
        text: "确保在您的 Pod 定义中将 seccomp profile 设置为 docker/default（手动）。"
        type: "manual"
        remediation: |-
          使用 `securityContext` 在你的 Pod 定义中启用 docker/default seccomp 配置文件。一个示例如下：  securityContext:    seccompProfile:      type: RuntimeDefault
        scored: false

      - id: 5.7.3
        text: "将 SecurityContext 应用于您的 Pod 和容器（手动）。"
        type: "manual"
        remediation: |-
          遵循 Kubernetes 文档并为您的 Pods 应用 SecurityContexts。您可以参考 CIS 容器安全基准提供的建议 SecurityContexts 列表。
        scored: false

      - id: 5.7.4
        text: "不应该使用默认命名空间（手动）。"
        remediation: |-
          确保创建命名空间以允许适当分隔 Kubernetes 资源，并且所有新资源都创建在特定的命名空间中。
        scored: false
