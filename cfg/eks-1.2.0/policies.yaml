controls:
version: "eks-1.2.0"
id: 4
text: "策略"
type: "policies"
groups:
  - id: 4.1
    text: "RBAC 和服务账户"
    checks:
      - id: 4.1.1
        text: "确保只在必要情况下使用 cluster-admin 角色（手动操作）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 ClusterRoleBindings。检查它们是否被使用，以及它们是否需要这个角色，或者能否使用权限更少的角色。在可能的情况下，首先将用户绑定到一个权限更低的角色，然后删除绑定到 cluster-admin 角色的 ClusterRoleBinding:kubectl delete clusterrolebinding [name]
        scored: false

      - id: 4.1.2
        text: "最小化对机密信息的访问（手动操作）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除对集群中 secret 对象的获取、列表和监视访问权限。
        scored: false

      - id: 4.1.3
        text: "在角色（Roles）和集群角色（ClusterRoles）中尽可能减少通配符的使用（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，用具体的对象或操作替换 clusterroles 和 roles 中对通配符的使用。
        scored: false

      - id: 4.1.4
        text: "最小化创建 Pods 的访问权限（手动）。"
        type: "manual"
        remediation: |-
          在可能的情况下，移除集群中对 Pod 对象的创建访问权限。
        scored: false

      - id: 4.1.5
        text: "确保默认服务账号未被激活使用。 (手动)"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问 Kubernetes API 服务器时创建明确的服务账户。修改每个默认服务账户的配置，包括该值 automountServiceAccountToken: false。
        scored: false

      - id: 4.1.6
        text: "确保只在必要的情况下挂载服务账户令牌（手动）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账号令牌的 Pod 和服务账号的定义，禁用该功能。
        scored: false

      - id: 4.1.7
        text: "避免使用 system:masters 组（手动方式）。"
        type: "manual"
        remediation: |-
          从集群中的所有用户中移除 system:masters 组。
        scored: false

      - id: 4.1.8
        text: "在 Kubernetes 集群中限制使用 Bind、Impersonate 和 Escalate 权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，从主体中删除模拟（impersonate）、绑定（bind）和提升（escalate）权限。
        scored: false

  - id: 4.2
    text: "Pod 安全策略"
    checks:
      - id: 4.2.1
        text: "减少特权容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.privileged 字段被省略或设置为 false。
        scored: false

      - id: 4.2.2
        text: "尽量减少容器共享主机进程ID命名空间的准入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostPID 字段被省略或设置为 false。
        scored: false

      - id: 4.2.3
        text: "尽量减少希望共享主机 IPC 命名空间的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostIPC 字段被省略或设置为 false。
        scored: false

      - id: 4.2.4
        text: "最小化允许希望共享主机网络命名空间的容器进入（自动化）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PSP，确保 .spec.hostNetwork 字段被省略或设置为 false。
        scored: false

      - id: 4.2.5
        text: "最小化通过 allowPrivilegeEscalation 允许提升权限的容器的准入（自动化）。"
        type: "manual"
        remediation: |-
          根据 Kubernetes 文档中的描述创建一个 Pod 安全策略（PSP），确保 .spec.allowPrivilegeEscalation 字段被省略或设置为 false。
        scored: false

      - id: 4.2.6
        text: "减少根容器的准入（自动化）"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档中的描述创建一个 PodSecurityPolicy（PSP），确保 .spec.runAsUser.rule 被设置为 MustRunAsNonRoot 或 MustRunAs，UID 范围不包括 0。
        scored: false

      - id: 4.2.7
        text: "最小化允许具有附加功能的容器进入（手动）。"
        type: "manual"
        remediation: |-
          确保集群的 PSP 中不包含 allowedCapabilities，除非将其设置为空数组。
        scored: false

      - id: 4.2.8
        text: "最小化分配了特权的容器的准入（手动）。"
        type: "manual"
        remediation: |-
          审查在您的集群上运行的应用程序中的 capabilities 使用情况。对于包含不需要任何 Linux capabities 来运行的应用程序的命名空间，请考虑添加一个禁止接受不丢弃所有 capabilities 的容器的 PSP。
        scored: false

  - id: 4.3
    text: "CNI 插件"
    checks:
      - id: 4.3.1
        text: "确保 CNI 插件支持网络策略（手动）。"
        type: "manual"
        remediation: |-
          与 RBAC 策略类似，网络策略应该遵循最小权限访问的原则。首先创建一个拒绝所有流量的策略，限制一个命名空间的所有入站和出站流量，或者使用 Calico 创建一个全局策略。
        scored: false

      - id: 4.3.2
        text: "确保所有命名空间都定义了网络策略（手动）。"
        type: "manual"
        remediation: |-
          按照文档的说明创建 NetworkPolicy 对象，根据需要进行操作。
        scored: false

  - id: 4.4
    text: "秘钥管理"
    checks:
      - id: 4.4.1
        text: "推荐优先将 secrets 作为文件而不是作为环境变量来使用（手动方式）。"
        type: "manual"
        remediation: |-
          如果可能的话，重写应用程序代码，从挂载的秘钥文件中读取秘钥，而不是从环境变量中读取。
        scored: false

      - id: 4.4.2
        text: "考虑使用外部的秘钥存储（手动方式）。"
        type: "manual"
        remediation: |-
          请参考您的云提供商或第三方秘密管理解决方案提供的秘密管理选项。
        scored: false

  - id: 4.5
    text: "可扩展的准入控制"
    checks: []

  - id: 4.6
    text: "一般政策"
    checks:
      - id: 4.6.1
        text: "使用命名空间（手动方式）来在资源之间创建管理边界。"
        type: "manual"
        remediation: |-
          按照文档的指导，在部署中根据需要为对象创建命名空间。
        scored: false

      - id: 4.6.2
        text: "为您的 Pod 和容器应用安全上下文（手动操作）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的指示，在您的 Pod 上应用安全上下文。对于建议的安全上下文列表，您可以参考 Docker 容器的 CIS 安全基准。
        scored: false

      - id: 4.6.3
        text: "不应使用默认命名空间（手动）."
        type: "manual"
        remediation: |-
          确保创建命名空间以便适当地隔离 Kubernetes 资源，并且所有新资源都创建在指定的命名空间中。
        scored: false
