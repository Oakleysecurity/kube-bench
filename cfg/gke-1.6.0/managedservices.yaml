controls:
version: "gke-1.6.0"
id: 5
text: "托管服务"
type: "managedservices"
groups:
  - id: 5.1
    text: "镜像仓库和镜像扫描"
    checks:
      - id: 5.1.1
        text: "确保启用镜像漏洞扫描（自动化）。"
        type: "manual"
        remediation: |-
          对于托管在 GCR 中的镜像：使用命令行：  gcloud services enable containeranalysis.googleapis.com对于托管在 AR 中的镜像：使用命令行：  gcloud services enable containerscanning.googleapis.com
        scored: false

      - id: 5.1.2
        text: "尽量减少用户对容器镜像仓库的访问权限（手动操作）。"
        type: "manual"
        remediation: |-
          对于托管在 AR 中的镜像：使用命令行：  gcloud artifacts repositories set-iam-policy <repository-name> <path-to-policy-file> \    --location <repository-location>要了解如何配置策略文件，请参考：https://cloud.google.com/artifact-registry/docs/access-control#grant对于托管在 GCR 中的镜像：使用命令行：要在 GCR 存储桶级别更改角色：首先，如果需要读取权限，请运行以下命令：  gsutil iam ch <type>:<email_address>:objectViewer gs://artifacts.<project_id>.appspot.com然后使用以下命令删除权限过高的角色（Storage Admin / Storage Object Admin / Storage Object Creator）：  gsutil iam ch -d <type>:<email_address>:<role> gs://artifacts.<project_id>.appspot.com其中：<type> 可以是以下之一：  user，如果 <email_address> 是 Google 帐号。  serviceAccount，如果 <email_address> 指定了服务帐号。<email_address> 可以是以下之一：    Google 帐号（例如，someone@example.com）。    云 IAM 服务帐号。要修改在项目级别定义的角色，并在 GCR 存储桶内继承的角色，或者 Service Account User 角色，提取 IAM 策略文件，相应修改并使用以下命令应用：  gcloud projects set-iam-policy <project_id> <policy_file>
        scored: false

      - id: 5.1.3
        text: "将集群访问最小化为容器镜像仓库的只读权限（手动操作）。"
        type: "manual"
        remediation: |-
          对于托管在 AR 的镜像：使用命令行：添加 artifactregistry.reader 角色  gcloud artifacts repositories add-iam-policy-binding <repository> \  --location=<repository-location> \  --member='serviceAccount:<email-address>' \  --role='roles/artifactregistry.reader'移除除 artifactregistry.reader 外的其他角色  gcloud artifacts repositories remove-iam-policy-binding <repository> \  --location <repository-location> \  --member='serviceAccount:<email-address>' \  --role='<role-name>'对于托管在 GCR 的镜像：对于明确授予对存储桶权限的帐号：首先为 Kubernetes Service Account 添加读取权限：  gsutil iam ch <type>:<email_address>:objectViewer gs://artifacts.<project_id>.appspot.com  其中：    <type> 可以是以下之一：      user，如果 <email_address> 是 Google 帐号。      serviceAccount，如果 <email_address> 指定了服务帐号。      <email_address> 可以是以下之一：        Google 帐号（例如，someone@example.com）。        云 IAM 服务帐号。然后使用以下命令移除过度权限的角色（Storage Admin / Storage Object Admin / Storage Object Creator）：  gsutil iam ch -d <type>:<email_address>:<role> gs://artifacts.<project_id>.appspot.com对于通过项目级别权限继承对 GCR 存储桶访问权限的帐号，相应地修改项目的 IAM 策略文件，然后使用以下命令上传：  gcloud projects set-iam-policy <project_id> <policy_file>
        scored: false

      - id: 5.1.4
        text: "确保只使用可信任的容器镜像（手动）"
        type: "manual"
        remediation: |-
          使用命令行：更新集群以启用二进制授权：  gcloud container cluster update <cluster_name> --enable-binauthz使用二进制授权策略参考文档（https://cloud.google.com/binary-authorization/docs/policy-yaml-reference）来创建二进制授权策略。将策略文件导入到二进制授权中：  gcloud container binauthz policy import <yaml_policy>
        scored: false

  - id: 5.2
    text: "身份和访问管理（IAM）"
    checks:
      - id: 5.2.1
        text: "确保 GKE 集群未使用 Compute Engine 默认服务账号 (Automated) 来运行。"
        type: "manual"
        remediation: |-
          使用命令行：创建一个具有最低特权的服务账号：  gcloud iam service-accounts create <node_sa_name> \    --display-name "GKE Node Service Account"  export NODE_SA_EMAIL=gcloud iam service-accounts list \    --format='value(email)' --filter='displayName:GKE Node Service Account'将以下角色授予该服务账号：  export PROJECT_ID=gcloud config get-value project  gcloud projects add-iam-policy-binding <project_id> --member \    serviceAccount:<node_sa_email> --role roles/monitoring.metricWriter  gcloud projects add-iam-policy-binding <project_id> --member \    serviceAccount:<node_sa_email> --role roles/monitoring.viewer  gcloud projects add-iam-policy-binding <project_id> --member \    serviceAccount:<node_sa_email> --role roles/logging.logWriter使用该服务账号创建一个新的 Node pool，请运行以下命令：  gcloud container node-pools create <node_pool> \    --service-account=<sa_name>@<project_id>.iam.gserviceaccount.com \    --cluster=<cluster_name> --zone <compute_zone>注意：工作负载需要迁移到新的 Node pool，并且应删除使用默认服务账号的旧 Node pools 以完成修复。
        scored: false

      - id: 5.2.2
        text: "建议使用专用的 GCP 服务账号和工作负载身份（手动方式）。"
        type: "manual"
        remediation: |-
          使用命令行：  gcloud container clusters update <cluster_name> --zone <cluster_zone> \  --workload-pool <project_id>.svc.id.goog请注意，现有的节点池不受影响。新节点池默认为 --workload-metadata-from-node=GKE_METADATA_SERVER。然后，修改现有节点池以启用 GKE_METADATA_SERVER：  gcloud container node-pools update <node_pool_name> --cluster <cluster_name> \    --zone <cluster_zone> --workload-metadata=GKE_METADATA为了让工作负载使用工作负载身份，请根据以下文档中的描述进行相应修改: https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity。另外，考虑在更新节点池时对托管工作负载可用性的影响。可能更适合创建新的节点池。
        scored: false

  - id: 5.3
    text: "云密钥管理服务（Cloud Key Management Service，Cloud KMS）"
    checks:
      - id: 5.3.1
        text: "确保 Kubernetes Secrets 使用在 Cloud KMS 中管理的密钥进行加密（自动化）。"
        type: "manual"
        remediation: |-
          创建一个密钥：创建一个密钥环：  gcloud kms keyrings create <ring_name> --location <location> --project \    <key_project_id>创建一个密钥：  gcloud kms keys create <key_name> --location <location> --keyring <ring_name> \    --purpose encryption --project <key_project_id>为 Kubernetes Engine 服务代理服务账号授予 Cloud KMS CryptoKey Encrypter/Decrypter 角色：  gcloud kms keys add-iam-policy-binding <key_name> --location <location> \  --keyring <ring_name> --member serviceAccount:<service_account_name> \  --role roles/cloudkms.cryptoKeyEncrypterDecrypter --project <key_project_id>创建一个新的集群并启用应用层加密：  gcloud container clusters create <cluster_name> --cluster-version=latest \  --zone <zone> \  --database-encryption-key projects/<key_project_id>/locations/<location>/keyRings/<ring_name>/cryptoKeys/<key_name> \  --project <cluster_project_id>在现有集群上启用：  gcloud container clusters update <cluster_name> --zone <zone> \  --database-encryption-key projects/<key_project_id>/locations/<location>/keyRings/<ring_name>/cryptoKeys/<key_name> \  --project <cluster_project_id>
        scored: false

  - id: 5.4
    text: "节点元数据"
    checks:
      - id: 5.4.1
        text: "确保 GKE Metadata Server 已启用（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：  gcloud container clusters update <cluster_name> --identity-namespace=<project_id>.svc.id.goog请注意，现有的节点池不受影响。新的节点池默认使用 --workload-metadata-from-node=GKE_METADATA_SERVER。要修改现有的节点池以启用 GKE Metadata 服务器：  gcloud container node-pools update <node_pool_name> --cluster=<cluster_name> \    --workload-metadata-from-node=GKE_METADATA_SERVER工作负载可能需要进行修改，以便它们可以使用工作负载标识，具体描述请参考：https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity。
        scored: false

  - id: 5.5
    text: "节点配置和维护"
    checks:
      - id: 5.5.1
        text: "确保在 GKE 节点映像中使用 Container-Optimized OS (cos_containerd)（自动化方式）。"
        type: "manual"
        remediation: |-
          使用命令行:将现有集群的节点池的节点镜像设置为 cos:  gcloud container clusters upgrade <cluster_name> --image-type cos_containerd \    --zone <compute_zone> --node-pool <node_pool_name>
        scored: false

      - id: 5.5.2
        text: "确保 GKE 节点启用了节点自动修复（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：要为现有集群的节点池启用节点自动修复：  gcloud container node-pools update <node_pool_name> --cluster <cluster_name> \    --zone <compute_zone> --enable-autorepair
        scored: false

      - id: 5.5.3
        text: "确保 GKE 节点启用了节点自动升级（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：要为现有集群的节点池启用节点自动升级，请运行以下命令：   gcloud container node-pools update <node_pool_name> --cluster <cluster_name> \    --zone <cluster_zone> --enable-autoupgrade
        scored: false

      - id: 5.5.4
        text: "在创建新集群时，使用发布渠道（自动化）来自动管理 GKE 版本。"
        type: "manual"
        remediation: |-
          使用命令行：通过运行以下命令创建一个新的集群：  gcloud container clusters create <cluster_name> --zone <cluster_zone> \    --release-channel <release_channel>其中 <release_channel> 根据需求可以是 stable 或 regular。
        scored: false

      - id: 5.5.5
        text: "确保启用了 Shielded GKE 节点（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行方式：要迁移现有集群，需要在集群更新命令中指定标志 --enable-shielded-nodes：gcloud container clusters update <cluster_name> --zone <cluster_zone> \    --enable-shielded-nodes
        scored: false

      - id: 5.5.6
        text: "确保启用了加固的 GKE 节点的完整性监控（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：要在集群中创建一个启用完整性监控的节点池，请运行以下命令：  gcloud container node-pools create <node_pool_name> --cluster <cluster_name> \    --zone <compute_zone> --shielded-integrity-monitoring需要将现有不符合规范的节点池中的工作负载迁移到新创建的节点池，然后删除不符合规范的节点池以完成修复。
        scored: false

      - id: 5.5.7
        text: "确保启用了 Shielded GKE 节点的安全启动（自动）。"
        type: "manual"
        remediation: |-
          使用命令行：要在集群中创建一个启用 Secure Boot 的节点池，请运行以下命令：  gcloud container node-pools create <node_pool_name> --cluster <cluster_name> \    --zone <compute_zone> --shielded-secure-boot需要将工作负载从现有的不符合规范的节点池迁移到新创建的节点池，然后删除不符合规范的节点池。
        scored: false

  - id: 5.6
    text: "集群网络"
    checks:
      - id: 5.6.1
        text: "启用 VPC 流日志和节点内可见性（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：1. 查找与集群关联的子网名称。   gcloud container clusters describe <cluster_name> \     --region <cluster_region> --format json | jq '.subnetwork'2. 更新子网以启用 VPC 流日志。   gcloud compute networks subnets update <subnet_name> --enable-flow-logs
        scored: false

      - id: 5.6.2
        text: "确保使用 VPC-native 集群（自动化）"
        type: "manual"
        remediation: |-
          使用命令行:要在新集群上启用别名 IP，请运行以下命令：  gcloud container clusters create <cluster_name> --zone <compute_zone> \    --enable-ip-alias如果使用自动驾驶配置模式：  gcloud container clusters create-auto <cluster_name> \    --zone <compute_zone>
        scored: false

      - id: 5.6.3
        text: "确保启用了控制平面授权网络（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：要为现有集群启用控制平面授权网络，请运行以下命令：  gcloud container clusters update <cluster_name> --zone <compute_zone> \    --enable-master-authorized-networks除此之外，您可以使用 --master-authorized-networks 标志列出授权网络，该标志包含一个最多包含 20 个外部网络的列表，这些网络被允许通过 HTTPS 连接到您集群的控制平面。您可以按 CIDR 表示法提供这些网络的地址，作为逗号分隔的地址列表（例如 90.90.100.0/24）。
        scored: false

      - id: 5.6.4
        text: "确保创建集群时启用私有端点并禁用公共访问（手动方式）。"
        type: "manual"
        remediation: |-
          使用命令行：通过在创建集群的命令中包含 --enable-private-endpoint 标志，创建一个启用私有端点且禁用公共访问的集群：  gcloud container clusters create <cluster_name> --enable-private-endpoint设置此标志还需要设置 --enable-private-nodes、--enable-ip-alias 和 --master-ipv4-cidr=<master_cidr_range>。
        scored: false

      - id: 5.6.5
        text: "确保使用 Private Nodes (手动) 创建集群。"
        type: "manual"
        remediation: |-
          使用命令行：要创建一个启用私有节点的集群，请在 cluster create 命令中包含 --enable-private-nodes 标志：```shellgcloud container clusters create <cluster_name> --enable-private-nodes```设置此标志还需要设置 --enable-ip-alias 和 --master-ipv4-cidr=<master_cidr_range>。
        scored: false

      - id: 5.6.6
        text: "考虑为 GKE 工作节点设置防火墙规则（手动方式）。"
        type: "manual"
        remediation: |-
          使用命令行：使用以下命令生成防火墙规则，根据需要设置变量：  gcloud compute firewall-rules create <firewall_rule_name> \  --network <network> --priority <priority> --direction <direction> \  --action <action> --target-tags <tag> \  --target-service-accounts <service_account> \  --source-ranges <source_cidr_range> --source-tags <source_tags> \  --source-service-accounts <source_service_account> \  --destination-ranges <destination_cidr_range> --rules <rules>
        scored: false

      - id: 5.6.7
        text: "确保使用 Google 管理的 SSL 证书（自动化）。"
        type: "manual"
        remediation: |-
          如果发现类型为 LoadBalancer 的服务，请考虑将该服务替换为一个 Ingress。要配置 Ingress 并使用 Google 管理的 SSL 证书，请按照以下链接列出的说明进行操作：https://cloud.google.com/kubernetes-engine/docs/how-to/managed-certs.
        scored: false

  - id: 5.7
    text: "日志记录"
    checks:
      - id: 5.7.1
        text: "确保启用日志记录和云监控（自动化）。"
        type: "manual"
        remediation: |-
          要为现有集群启用日志记录，运行以下命令：```gcloud container clusters update <cluster_name> --zone <compute_zone> --logging=<components_to_be_logged>```查看 https://cloud.google.com/sdk/gcloud/reference/container/clusters/update#--logging 获取日志记录可用的组件列表。要为现有集群启用云监控，运行以下命令：```gcloud container clusters update <cluster_name> --zone <compute_zone> --monitoring=<components_to_be_logged>```查看 https://cloud.google.com/sdk/gcloud/reference/container/clusters/update#--monitoring 获取云监控可用的组件列表。
        scored: false

      - id: 5.7.2
        text: "启用 Linux auditd 日志记录（手动）"
        type: "manual"
        remediation: |-
          使用命令行：下载示例清单：curl https://raw.githubusercontent.com/GoogleCloudPlatform/k8s-node-tools/master/os-audit/cos-auditd-logging.yaml > cos-auditd-logging.yaml根据需要编辑示例清单。然后部署它们：kubectl apply -f cos-auditd-logging.yaml验证日志记录 Pod 是否已启动。如果在清单中定义了不同的命名空间，请将cos-auditd替换为所使用的命名空间的名称：kubectl get pods --namespace=cos-auditd
        scored: false

  - id: 5.8
    text: "认证和授权"
    checks:
      - id: 5.8.1
        text: "确保使用客户端证书进行身份验证已经被禁用（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：创建一个新集群而无需客户端证书:  gcloud container clusters create [CLUSTER_NAME] \    --no-issue-client-certificate
        scored: false

      - id: 5.8.2
        text: "使用 Google Groups for GKE（手动）来管理 Kubernetes RBAC 用户。"
        type: "manual"
        remediation: |-
          使用命令行：按照 G Suite Groups 指南中的说明进行操作：https://cloud.google.com/kubernetes-engine/docs/how-to/role-based-access-control#google-groups-for-gke。然后，创建一个集群：  gcloud container clusters create <cluster_name> --security-group <security_group_name>最后，创建 Roles、ClusterRoles、RoleBindings 和 ClusterRoleBindings，并引用 G Suite Groups。
        scored: false

      - id: 5.8.3
        text: "确保已禁用传统授权（ABAC）（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：要禁用现有集群的传统授权，运行以下命令：  gcloud container clusters update <cluster_name> --zone <compute_zone> \    --no-enable-legacy-authorization
        scored: false

  - id: 5.9
    text: "存储"
    checks:
      - id: 5.9.1
        text: "启用 GKE 持久磁盘（PD）的客户管理加密密钥（CMEK）（手动操作）。"
        type: "manual"
        remediation: |-
          使用命令行：按照 https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek 中详细说明的步骤操作。
        scored: false

      - id: 5.9.2
        text: "为启动磁盘启用客户管理加密密钥（CMEK）（自动）。"
        type: "manual"
        remediation: |-
          使用命令行：使用客户管理的加密密钥为节点启动磁盘创建一个新的节点池，磁盘类型为 <disk_type>，可以是 pd-standard 或 pd-ssd:  gcloud container node-pools create <cluster_name> --disk-type <disk_type> \  --boot-disk-kms-key projects/<key_project_id>/locations/<location>/keyRings/<ring_name>/cryptoKeys/<key_name>使用客户管理的加密密钥为节点启动磁盘创建一个集群，磁盘类型为 <disk_type>，可以是 pd-standard 或 pd-ssd:  gcloud container clusters create <cluster_name> --disk-type <disk_type> \  --boot-disk-kms-key projects/<key_project_id>/locations/<location>/keyRings/<ring_name>/cryptoKeys/<key_name>
        scored: false

  - id: 5.10
    text: "其他集群配置"
    checks:
      - id: 5.10.1
        text: "确保 Kubernetes Web UI 已福切（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：要在现有集群上禁用 Kubernetes 仪表盘，请运行以下命令：  gcloud container clusters update <cluster_name> --zone <zone> \    --update-addons=KubernetesDashboard=DISABLED
        scored: false

      - id: 5.10.2
        text: "确保不将 Alpha 集群用于生产工作负载（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：在创建新集群时  gcloud container clusters create [CLUSTER_NAME] \    --zone [COMPUTE_ZONE]请不要使用 --enable-kubernetes-alpha 参数。
        scored: false

      - id: 5.10.3
        text: "考虑使用 GKE Sandbox 来运行不受信任的工作负载（手动）。"
        type: "manual"
        remediation: |-
          使用命令行：要在现有集群上启用 GKE 沙盒，必须创建一个新的节点池，可以使用以下命令完成：gcloud container node-pools create <node_pool_name> --zone <compute-zone> \--cluster <cluster_name> --image-type=cos_containerd --sandbox="type=gvisor"
        scored: false

      - id: 5.10.4
        text: "确保使用二进制授权（自动化）。"
        type: "manual"
        remediation: |-
          使用命令行：更新集群以启用二进制授权：  gcloud container cluster update <cluster_name> --zone <compute_zone> \  --binauthz-evaluation-mode=<evaluation_mode>示例：  gcloud container clusters update $CLUSTER_NAME --zone $COMPUTE_ZONE \  --binauthz-evaluation-mode=PROJECT_SINGLETON_POLICY_ENFORCE详情请查看：https://cloud.google.com/sdk/gcloud/reference/container/clusters/update#--binauthz-evaluation-mode以获取有关可用评估模式的更多详细信息。使用二进制授权策略参考创建二进制授权策略:https://cloud.google.com/binary-authorization/docs/policy-yaml-reference 提供指导。将策略文件导入二进制授权：  gcloud container binauthz policy import <yaml_policy>
        scored: false

      - id: 5.10.5
        text: "启用安全姿势 (手动)"
        type: "manual"
        remediation: |-
          通过 UI、gCloud 或 API 启用安全姿态。  https://cloud.google.com/kubernetes-engine/docs/how-to/protect-workload-configuration
        scored: false
