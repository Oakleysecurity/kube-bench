controls:
version: "gke-1.6.0"
id: 4
text: "Kubernetes 策略"
type: "policies"
groups:
  - id: 4.1
    text: "RBAC（基于角色的访问控制）和服务账户"
    checks:
      - id: 4.1.1
        text: "确保 cluster-admin 角色仅在必要时使用（自动化）。"
        type: "manual"
        remediation: |-
          识别所有绑定到 cluster-admin 角色的 clusterrolebindings。检查它们是否被使用，以及它们是否需要这个角色，或者是否可以使用较低权限的角色。在可能的情况下，首先将用户绑定到较低权限的角色，然后删除绑定到 cluster-admin 角色的 clusterrolebinding：```bashkubectl delete clusterrolebinding [name]```
        scored: false

      - id: 4.1.2
        text: "最小化对秘密的访问（自动化）"
        type: "manual"
        remediation: |-
          在可能的情况下，请删除集群中对秘密对象的获取、列出和监视访问权限。
        scored: false

      - id: 4.1.3
        text: "在角色（Roles）和集群角色（ClusterRoles）中尽量减少通配符的使用（自动化）。"
        type: "manual"
        remediation: |-
          尽可能地用具体的对象或操作替换 clusterroles 和 roles 中的通配符。
        scored: false

      - id: 4.1.4
        text: "确保默认服务账户没有被激活使用（自动化）。"
        type: "manual"
        remediation: |-
          在 Kubernetes 工作负载需要特定访问 Kubernetes API 服务器时，创建明确的服务账号。修改每个默认服务账号的配置，添加以下数值：  automountServiceAccountToken: false
        scored: false

      - id: 4.1.5
        text: "确保只在必要的地方挂载 Service Account Tokens（自动化）。"
        type: "manual"
        remediation: |-
          修改不需要挂载服务账户令牌的 pod 和服务账户的定义，禁用该功能。
        scored: false

      - id: 4.1.6
        text: "避免使用 system:masters 组（自动化）。"
        type: "manual"
        remediation: |-
          从集群中的所有用户中移除 system:masters 组。
        scored: false

      - id: 4.1.7
        text: "在 Kubernetes 集群中限制使用 Bind、Impersonate 和 Escalate 权限（手动方式）。"
        type: "manual"
        remediation: |-
          在可能的情况下，从主体中移除模拟、绑定和提升权限的权利。
        scored: false

      - id: 4.1.8
        text: "避免绑定到 system:anonymous（自动化）。"
        type: "manual"
        remediation: |-
          识别所有授予用户 system:anonymous 的 clusterrolebindings 和 rolebindings。检查它们是否被使用，并使用上面审计部分中的命令查看与绑定关联的权限，或参考 GKE 文档 (https://cloud.google.com/kubernetes-engine/docs/best-practices/rbac#detect-prevent-default)。强烈考虑将不安全的绑定替换为经过身份验证的、用户定义的组。在可能的情况下，绑定到非默认的、用户定义的组，使用最小权限的角色。如果存在任何不安全的绑定到用户 system:anonymous，请考虑后删除它们，仅保留必要且更安全的绑定进行集群操作。```shellkubectl delete clusterrolebinding [CLUSTER_ROLE_BINDING_NAME]kubectl delete rolebinding [ROLE_BINDING_NAME] --namespace [ROLE_BINDING_NAMESPACE]```
        scored: false

      - id: 4.1.9
        text: "避免非默认绑定到 system:unauthenticated（自动化）。"
        type: "manual"
        remediation: |-
          识别所有非默认的 clusterrolebindings 和 rolebindings 到系统组 system:unauthenticated。检查它们是否被使用，并使用上面审计部分的命令来审查与绑定相关的权限，或参考 GKE 文档（https://cloud.google.com/kubernetes-engine/docs/best-practices/rbac#detect-prevent-default）。强烈考虑将非默认的、不安全的绑定替换为经过身份验证的、用户定义的组。在可能的情况下，绑定到非默认的、用户定义的组，使用最小权限的角色。如果存在任何非默认的、不安全的绑定到系统组 system:unauthenticated，请在考虑了仅使用必要的更安全的绑定进行集群操作后，继续删除它们。```shellkubectl delete clusterrolebinding [CLUSTER_ROLE_BINDING_NAME]kubectl delete rolebinding [ROLE_BINDING_NAME] --namespace [ROLE_BINDING_NAMESPACE]```
        scored: false

      - id: 4.1.10
        text: "避免将非默认绑定到 system:authenticated（自动）。"
        type: "manual"
        remediation: |-
          识别所有非默认的 clusterrolebindings 和 rolebindings，绑定到系统组 system:authenticated。检查它们是否在使用，并使用上述审计部分的命令或参考 GKE 文档，审查与绑定相关的权限。强烈建议用经过身份验证的、用户定义的组替换非默认的、不安全的绑定。在可能的情况下，绑定到非默认的、用户定义的组，使用最小权限角色。如果存在任何非默认的、不安全的绑定到系统组 system:authenticated，请在考虑了仅包含必要、更安全的绑定的集群操作后，继续删除它们。```bashkubectl delete clusterrolebinding [CLUSTER_ROLE_BINDING_NAME]kubectl delete rolebinding [ROLE_BINDING_NAME] --namespace [ROLE_BINDING_NAMESPACE]```
        scored: false

  - id: 4.2
    text: "Pod 安全标准"
    checks:
      - id: 4.2.1
        text: "确保集群对所有命名空间强制执行 Pod 安全标准基线配置文件或更严格的配置文件。 (手动)"
        type: "manual"
        remediation: |-
          确保每个包含用户工作负载的命名空间都设置了 Pod 安全入口。运行以下命令来强制在命名空间中执行基线配置文件：kubectl label namespace pod-security.kubernetes.io/enforce=baseline
        scored: false

  - id: 4.3
    text: "网络策略和 CNI"
    checks:
      - id: 4.3.1
        text: "确保使用的 CNI 支持网络策略（手动）。"
        type: "manual"
        remediation: |-
          要在 GKE 中使用带有网络策略的 CNI 插件，请启用网络策略，CNI 插件将会被更新。请参考建议 Recommendation 5.6.7。
        scored: false

      - id: 4.3.2
        text: "确保所有命名空间都有定义好的网络策略（自动化）。"
        type: "manual"
        remediation: |-
          按照文档创建所需的 NetworkPolicy 对象。请参阅：https://cloud.google.com/kubernetes-engine/docs/how-to/network-policy#creating_a_network_policy 获取更多信息。
        scored: false

  - id: 4.4
    text: "秘钥管理"
    checks:
      - id: 4.4.1
        text: "更倾向于将 secrets 作为文件而不是环境变量使用（自动化）。"
        type: "manual"
        remediation: |-
          如有可能，重写应用程序代码，改为从挂载的密钥文件中读取密钥，而不是从环境变量中读取。
        scored: false

      - id: 4.4.2
        text: "考虑外部秘钥存储（手动）"
        type: "manual"
        remediation: |-
          请参考您的云服务提供商或第三方机密管理解决方案提供的机密管理选项。
        scored: false

  - id: 4.5
    text: "可扩展的准入控制"
    checks:
      - id: 4.5.1
        text: "使用 ImagePolicyWebhook 出入控制器（手动方式）配置镜像来源验证。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档设置镜像溯源。同时参考建议 5.10.4。
        scored: false

  - id: 4.6
    text: "通用策略"
    checks:
      - id: 4.6.1
        text: "使用命名空间（手动方式）在资源之间创建管理边界。"
        type: "manual"
        remediation: |-
          根据文档的指导，按需为部署中的对象创建命名空间。
        scored: false

      - id: 4.6.2
        text: "确保在您的 Pod 定义中将 seccomp profile 设置为 RuntimeDefault（自动化）。"
        type: "manual"
        remediation: |-
          使用安全上下文来在您的 Pod 定义中启用 RuntimeDefault seccomp 配置文件。示例如下：  {    "namespace": "kube-system",    "name": "metrics-server-v0.7.0-dbcc8ddf6-gz7d4",    "seccompProfile": "RuntimeDefault"  }
        scored: false

      - id: 4.6.3
        text: "为您的 Pod 和容器应用安全上下文（手动）。"
        type: "manual"
        remediation: |-
          按照 Kubernetes 文档的指引，为你的 Pod 应用安全上下文。对于建议的安全上下文列表，可以参考 CIS Google 容器优化操作系统基准。
        scored: false

      - id: 4.6.4
        text: "不应使用默认命名空间（自动化）。"
        type: "manual"
        remediation: |-
          确保创建命名空间以允许适当分离 Kubernetes 资源，并确保所有新资源都在特定命名空间中创建。
        scored: false
